In this task, you will solve the same task as in assignment 2, using the same input file as from Lab2, with planets by name, mass and distance to the Sun. But now you should use a class to solve this problem. 

1. Create a class Planet that has the data members of name (type string), mass and distance (type double). Create this in it's own separate files (.cc and .h) and define member setter and getter functions for each of the data members.

While reading the file line by line, meaning planet by planet, for each line you will build a new object of type planet in your main program. Store all of them in a vector of planets, namely std::vector<Planet>. That is the power of creating our own types, as we can use them just as we would have used the regular types already created by C++, such as std::string and double. Test your setter and getter functions to ensure they work as expected.

2. You are familiar now with the std::sort of a std::vector. The default is by comparing the two objects. But what does it mean that a planet is larger in value than another one? You can overload the operators > and < to have multiple definitions, be it (a) that the name comes first alphabetical order, or (b) that the mass is larger, or (c) that the distance to the sun is larger. 

To change easily from one sorting to the other, note that std::sort can take user-defined functions. Define a function for each three cases above, and repeat the tasks for assignment 2.
