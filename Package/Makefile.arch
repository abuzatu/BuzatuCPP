# Choose between these options or add your own option.
# uname command returns "Linux" when I run on a Glasgow office machine and "Darwin" on my Mac
# don't put quotes and don't put a space after the variable, to be sure, add a comment when the name ends

WHERE_I_RUN=$(shell basename `uname`)
ifeq ($(WHERE_I_RUN),Linux)
ARCH=linuxx8664gcc
else ifeq ($(WHERE_I_RUN),Darwin)
ARCH=macosx64
MACOSXTARGET=10.9
endif

# by using this the code runs faster; with latest compilers even -O3 can be used instead
OPT          =-O2

ifeq ($(ARCH),linuxx8664gcc)
# AMD Opteron and Intel EM64T (64 bit mode) Linux with gcc 3.x
CXX           =g++
CXXFLAGS      =$(OPT) -Wall -fPIC -std=c++11
LD            =g++
LDFLAGS       =$(OPT)
SOFLAGS       =-shared
endif

ifeq ($(ARCH),macosx64)
# MacOS X >= 10.4 with gcc 64 bit mode (GNU gcc 4.*)
CXX           =clang++ 
CXXFLAGS      =$(OPT) -pipe -Wall -W -Woverloaded-virtual -std=c++11
LD            =clang++
LDFLAGS       =$(OPT) -mmacosx-version-min=$(MACOSXTARGET)
SOFLAGS       =-dynamiclib -single_module
endif

